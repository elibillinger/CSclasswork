// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[0..2], a = group1, b = group2, c = group3, d = group4, e = group5, f = group6, g = group7, h = group8);

    RAM4K( in = in, load = group1, address = address[2..13], out = outgroup1);
    RAM4K( in = in, load = group2, address = address[2..13], out = outgroup2);
    RAM4K( in = in, load = group3, address = address[2..13], out = outgroup3);
    RAM4K( in = in, load = group4, address = address[2..13], out = outgroup4);
    RAM4K( in = in, load = group5, address = address[2..13], out = outgroup5);
    RAM4K( in = in, load = group6, address = address[2..13], out = outgroup6);
    RAM4K( in = in, load = group7, address = address[2..13], out = outgroup7);
    RAM4K( in = in, load = group8, address = address[2..13], out = outgroup8);

    Mux8Way16(a = outgroup1, b = outgroup2, c = outgroup3, d = outgroup4, e = outgroup5, f = outgroup6, g = outgroup7, h = outgroup8, sel = address[0..2], out = out);
}